1. Информация о сервере.
{
uname -a
echo ""
cat /etc/*release
echo ""
df -h
echo ""
free -m
echo ""
nproc
}


2. Подготовка к установке.
useradd postgres
passwd postgres
<print_password>

{
mkdir -p /var/lib/pgsql
cd /var/lib/pgsql
mkdir -p dev/nifi/data
mkdir -p dev/nifi/conf
mkdir -p dev/nifi/wal_archive
chown -R postgres:postgres dev
ls -ld /var/lib/pgsql/dev/nifi/data
ls -ld /var/lib/pgsql/dev/nifi/conf
ls -ld /var/lib/pgsql/dev/nifi/wal_archive
}


yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
yum list |egrep -i "postgresql11|postgresql11-server|postgresql11-contrib|postgresql11-libs"
yum -y install postgresql11 pgbouncer postgresql11-server postgresql11-contrib postgresql11-libs


3. Установка
/usr/pgsql-11/bin/initdb -D /var/lib/pgsql/dev/nifi/data

     Success. You can now start the database server using:
     /usr/pgsql-11/bin/pg_ctl -D /var/lib/pgsql/dev/nifi/data -l logfile start



as root@postgres1s:

{
cat /lib/systemd/system/postgresql-11.service > /usr/lib/systemd/system/postgresql11_nifi.service
sed -i 's/Environment=PGDATA=\/var\/lib\/pgsql\/11\/data\//Environment=PGDATA=\/var\/lib\/pgsql\/dev\/nifi\/conf\//' /usr/lib/systemd/system/postgresql11_nifi.service
sed -i 's/ExecStartPre=\/usr\/pgsql-11\/bin\/postgresql-11-check-db-dir \${PGDATA}/ExecStartPre=\/usr\/pgsql-11\/bin\/postgresql-11-check-db-dir \/var\/lib\/pgsql\/dev\/nifi\/data\//' /usr/lib/systemd/system/postgresql11_nifi.service
echo "Environment=PGPORT=5432" >> /usr/lib/systemd/system/postgresql11_nifi.service
mv /var/lib/pgsql/dev/nifi/data/pg_hba.conf /var/lib/pgsql/dev/nifi/conf/pg_hba.conf
mv /var/lib/pgsql/dev/nifi/data/pg_ident.conf /var/lib/pgsql/dev/nifi/conf/pg_ident.conf
mv /var/lib/pgsql/dev/nifi/data/postgresql.conf /var/lib/pgsql/dev/nifi/conf/postgresql.conf
}

4. Первоначальная настройка параметров инстанса:
Добавили в /var/lib/pgsql/dev/nifi/conf/postgresql.conf

data_directory = '/var/lib/pgsql/dev/nifi/data/'
max_connections = 300 # max_connections = 100
shared_buffers = 8GB # shared_buffers = 128MB
effective_cache_size = 24GB
maintenance_work_mem = 2G
checkpoint_completion_target = 0.7
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
work_mem = 13981kB
min_wal_size = 1GB #min_wal_size = 80MB
max_wal_size = 2GB #max_wal_size = 1GB
max_worker_processes = 4
max_parallel_workers_per_gather = 2
max_parallel_workers = 4
listen_addresses = '*'
wal_level = replica
fsync = on
wal_sync_method = fdatasync //рекомендован как дефолтный на Linux, результаты тестов через pg_test_fsync подтверждают
full_page_writes = on
max_wal_senders = 10
wal_keep_segments = 100
max_replication_slots = 10
#hot_standby = on
#archive_mode = on
archive_command = 'test ! -f /var/lib/pgsql/dev/nifi/wal_archive/%f && cp %p /var/lib/pgsql/dev/nifi/wal_archive/%f'
####vacuuming####
autovacuum = on
autovacuum_analyze_scale_factor = 0.05
autovacuum_analyze_threshold = 50
autovacuum_max_workers = 10
autovacuum_naptime = 60
autovacuum_vacuum_cost_delay = 20
autovacuum_vacuum_cost_limit = -1
autovacuum_vacuum_scale_factor = 0.01
autovacuum_vacuum_threshold = 50
vacuum_cost_limit = 1000

####logging####
log_line_prefix = '%t [%p]: user=%u,db=%d,app=%a,client=%h '
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y%m%d_%H%M.log'
log_rotation_age = 360
#log_min_duration_statement = 0
log_checkpoints = on
#log_connections = on
#log_disconnections = on
log_lock_waits = on
log_temp_files = 0
log_autovacuum_min_duration = 0
log_error_verbosity = default
#log_duration = on


Добавили в /var/lib/pgsql/dev/nifi/conf/pg_hba.conf

host all all <server>/32 md5
host all all 127.0.0.1/32 trust


Добавили в .bash_profile:

export PATH=/usr/pgsql-11/bin:$PATH


as postgres@<server>:
{
CONF_FILE=/var/lib/pgsql/dev/nifi/conf/postgresql.conf
PG_HBA=/var/lib/pgsql/dev/nifi/conf/pg_hba.conf
echo "data_directory = '/var/lib/pgsql/dev/nifi/data/'
max_connections = 300
shared_buffers = 8GB
effective_cache_size = 24GB
maintenance_work_mem = 2GB
checkpoint_completion_target = 0.7
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
work_mem = 13981kB
max_worker_processes = 4
max_parallel_workers_per_gather = 2
max_parallel_workers = 4
listen_addresses = '*'
wal_level = replica
fsync = on
wal_sync_method = fdatasync
full_page_writes = on
max_wal_senders = 10
wal_keep_segments = 100
max_replication_slots = 10
#hot_standby = on
#archive_mode = on
archive_command = 'test ! -f /var/lib/pgsql/dev/nifi/wal_archive/%f && cp %p /var/lib/pgsql/dev/nifi/wal_archive/%f'

min_wal_size = 1GB
max_wal_size = 2GB
checkpoint_timeout='30min'

####vacuuming####
autovacuum = on
autovacuum_analyze_scale_factor = 0.05
autovacuum_analyze_threshold = 50
autovacuum_max_workers = 10
autovacuum_naptime = 60
autovacuum_vacuum_cost_delay = 20
autovacuum_vacuum_cost_limit = -1
autovacuum_vacuum_scale_factor = 0.01
autovacuum_vacuum_threshold = 50
vacuum_cost_limit = 1000

####logging####
log_line_prefix = '%t [%p]: user=%u,db=%d,app=%a,client=%h '
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y%m%d_%H%M.log'
log_rotation_age = 360
#log_min_duration_statement = 0
log_checkpoints = on
#log_connections = on
#log_disconnections = on
log_lock_waits = on
log_temp_files = 0
log_autovacuum_min_duration = 0
log_error_verbosity = default
#log_duration = on" >> $CONF_FILE
echo "host all all <server>/32 md5
host all all 127.0.0.1/32 trust" >> $PG_HBA
echo "export PATH=/usr/pgsql-11/bin:\$PATH" >> $HOME/.bash_profile
}



{
systemctl restart postgresql11_nifi.service
systemctl enable postgresql11_nifi.service
ps -ef |egrep "postg|pgbo"
}


 postgres 15102 1 18 11:14 ? 00:00:00 /usr/pgsql-11/bin/postmaster -D /var/lib/pgsql/dev/nifi/conf/
 postgres 15104 15102 0 11:14 ? 00:00:00 postgres: logger process
 postgres 15106 15102 0 11:14 ? 00:00:00 postgres: checkpointer process
 postgres 15107 15102 0 11:14 ? 00:00:00 postgres: writer process
 postgres 15108 15102 0 11:14 ? 00:00:00 postgres: wal writer process
 postgres 15109 15102 0 11:14 ? 00:00:00 postgres: autovacuum launcher process
 postgres 15110 15102 0 11:14 ? 00:00:00 postgres: stats collector process
 postgres 15111 15102 0 11:14 ? 00:00:00 postgres: bgworker: logical replication launcher



5. Установка pgbouncer + pgbadger:
yum -y install pgbouncer pgbadger

{
PB_INI=/etc/pgbouncer/pgbouncer.ini
PB_ULIST=/etc/pgbouncer/userlist.txt
echo "[databases]
postgres= host=localhost port=5432 dbname=postgres
example= host=localhost port=5432 dbname=example
[pgbouncer]
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/run/pgbouncer/pgbouncer.pid
listen_addr = *
listen_port = 6432
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = postgres, pgbadmin
stats_users = stats, postgres
pool_mode = session
server_reset_query = DISCARD ALL
max_client_conn = 300
default_pool_size = 280
reserve_pool_size = 10
reserve_pool_timeout = 5
ignore_startup_parameters = extra_float_digits" >> $PB_INI
touch $PB_ULIST
chown postgres:postgres $PB_ULIST
}

auth_type = hba
auth_hba_file = /var/lib/pgsql/test/project/data/pg_hba.conf


{
systemctl restart pgbouncer
systemctl restart postgresql11_nifi.service
ln -s /tmp/.s.PGSQL.6432 /var/run/postgresql/.s.PGSQL.6432
ps -ef |egrep "postg|pgbo"
}

pgbounc+ 11007 1 0 11:40 ? 00:00:00 /usr/bin/pgbouncer -d -q /etc/pgbouncer/pgbouncer.ini
postgres 11024 1 0 11:40 ? 00:00:00 /usr/pgsql-10/bin/postmaster -D /var/lib/pgsql/dev/nifi/conf/
postgres 11025 11024 0 11:40 ? 00:00:00 postgres: logger process
postgres 11027 11024 0 11:40 ? 00:00:00 postgres: checkpointer process
postgres 11028 11024 0 11:40 ? 00:00:00 postgres: writer process
postgres 11029 11024 0 11:40 ? 00:00:00 postgres: wal writer process
postgres 11030 11024 0 11:40 ? 00:00:00 postgres: autovacuum launcher process
postgres 11031 11024 0 11:40 ? 00:00:00 postgres: stats collector process
postgres 11032 11024 0 11:40 ? 00:00:00 postgres: bgworker: logical replication launcher